ymaps.modules.define("src.config",[],function(t){t({MIN_ZOOM:0,MAX_ZOOM:19,options:["labelLayout","labelDotLayout","labelDotVisible"],zoomRangeOptions:["labelClassName","labelForceVisible","labelTextColor","labelTextSize","labelCenterCoords","labelOffset","labelPermissibleInaccuracyOfVisibility"],properties:[]})}),ymaps.modules.define("src.label.GeoObjectCollection.Label",["util.extend","util.objectKeys","Placemark","src.label.util.LabelPlacemarkOverlay","src.label.LabelData","src.label.util.getLayoutTemplate"],function(t,e,o,n,a,i,l){function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}t(function(){function t(e,o,n,a){s(this,t),this._map=e,this._polygon=o,this._parentCollection=n,this._placemark={label:null,dot:null},this._layout={label:null,dot:null},this._layoutTemplateCache=a,this._init()}return t.prototype.setLabelData=function(t,e){return this._data=new i(this._polygon,t,e,this._map,this),this._data},t.prototype.getLabelData=function(){return this._data},t.prototype.getPlacemark=function(t){return this._placemark[t]},t.prototype.getLayout=function(t){return this._layout[t]},t.prototype.removeFromCollection=function(){var t=this;this._parentCollection&&(["label","dot"].forEach(function(e){-1!==t._parentCollection.indexOf(t._placemark[e])&&t._parentCollection.remove(t._placemark[e])}),this._polygon=null,this._parentCollection=null,this._placemark=null,this._layout=null,this._data=null)},t.prototype.addToCollection=function(){var t=this;if(!this._parentCollection)return Promise.reject();var e=["label","dot"].map(function(e){return t._placemark[e].getParent()||t._parentCollection.add(t._placemark[e]),t.getLabelLayout(e).then(function(o){t._layout[e]=o})});return Promise.all(e)},t.prototype.getLabelLayout=function(t){return this._placemark[t].getOverlay().then(function(t){return t.getLayout()})},t.prototype._init=function(){var o=this,n=l(this._polygon.options.getAll(),this._layoutTemplateCache);["label","dot"].forEach(function(a){o._placemark[a]=t._createPlacemark({properties:e({},{labelPolygon:o._polygon},o._polygon.properties.getAll()),options:o._polygon.options.getAll()},n[a])})},t._createPlacemark=function(t,o){var i=e({},{iconLayout:o,pointOverlay:a,iconLabelPosition:"absolute"},t.options);return new n([0,0],t.properties,i)},t.prototype.setDataByZoom=function(t,e){var o=this._data.getAll();this.setStyles(o.zoomInfo[t].style),this._data.setZoomData(t);var n=o.zoomInfo,a=o.autoCenter,i=o.dotVisible,l=o.dotSize;n=n[t],this.setCoordinates(n.center||a);var s="auto"===(e=e||n.visibleForce)?n.visible:e;return"dot"!==s||i||(s="none"),this.setVisibility(s),-1!==["dot","label"].indexOf(s)&&this.setCenterAndIconShape(s,"dot"===s?l:n.labelSize,n.labelOffset),{visible:n.visible,visibleForce:n.visibleForce,visibleType:s}},t.prototype.setLayoutTemplate=function(){var t=this,e=l(this._polygon.options.getAll(),this._layoutTemplateCache);o(e).forEach(function(o){var n=e[o];t._placemark[o].getParent()&&t._placemark[o].options.set({iconLayout:n})})},t.prototype.setCoordinates=function(t){var e=this;t.toString()!==this._placemark.label.geometry.getCoordinates().toString()&&["dot","label"].forEach(function(o){e._placemark[o].geometry.setCoordinates(t)})},t.prototype.setVisibility=function(t){var e=this;o(this._placemark).forEach(function(o){var n=o===t?"places":"phantom";e._placemark[o].options.set({pane:n})})},t.prototype.setStyles=function(t){this._placemark.label.options.set({iconLabelClassName:t.className,iconLabelTextSize:t.textSize,iconLabelTextColor:t.textColor})},t.prototype.setCenterAndIconShape=function(t,e,o){var n=e.height/2,a=e.width/2;this._placemark[t].options.set({iconShape:{type:"Rectangle",coordinates:[[-a+o[1],-n+o[0]],[a+o[1],n+o[0]]]},iconLabelTop:-n+o[0],iconLabelLeft:-a+o[1]})},t.prototype.destroy=function(){this.removeFromCollection()},t}())}),ymaps.modules.define("src.label.LabelData",["util.objectKeys","src.config","src.util.zoom.parseZoomData","src.util.getPolesOfInaccessibility","GeoObject","src.util.zoom.setOneZoomVisibility"],function(t,e,o,n,a,i,l){function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var r=o.MIN_ZOOM,c=o.MAX_ZOOM;t(function(){function t(e,o,n,a,i){s(this,t),this._map=a,this._labelInst=i,this._polygon=e,this._data={zoomInfo:{},autoCenter:[0,0],polygonIndex:0,dotSize:{height:0,width:0},dotFirstZoom:void 0,dotVisible:"boolean"!=typeof o.labelDotVisible||o.labelDotVisible},this._parsedOptions=this._parseOptions(n),this._init()}return t.prototype.setData=function(t,e){this._data[t]=e},t.prototype.getData=function(t){return this._data[t]},t.prototype.setZoomInfo=function(t,e,o){this._data.zoomInfo[t][e]=o},t.prototype.getZoomInfo=function(t){return t||"number"==typeof t&&0===t?this._data.zoomInfo[t]:this._data.zoomInfo},t.prototype.getAll=function(){return this._data},t.prototype.getPolygonCoords=function(){var t=this._polygon.geometry;return this._polygon instanceof i?t.getCoordinates()[this._data.polygonIndex]:t.coordinates[this._data.polygonIndex]},t.prototype.setZoomData=function(t){2!==this._data.zoomInfo[t].isCalculated&&(l(this._map,t,this._labelInst,"dot"),l(this._map,t,this._labelInst,"label"),this._data.zoomInfo[t].isCalculated=2)},t.prototype.setZoomDataForType=function(t,e){2!==this._data.zoomInfo[e].isCalculated&&(l(this._map,e,this._labelInst,t),this._data.zoomInfo[e].isCalculated++)},t.prototype._init=function(){var t=this._polygon.geometry,e=this._polygon instanceof i?t.getCoordinates():t.coordinates,o=a(e,1);this._data.autoCenter=o.center,this._data.polygonIndex=o.index;for(var n=r;n<=c;n++)this._data.zoomInfo[n]=this._fillZoom(n)},t.prototype._fillZoom=function(t){var e=this._createDefaultZoomInfo();return this._setData(e,"visibleForce",this._parsedOptions.labelForceVisible,t),this._setData(e,"center",this._parsedOptions.labelCenterCoords,t),this._setData(e,"labelOffset",this._parsedOptions.labelOffset,t),this._setData(e,"permissibleInaccuracyOfVisibility",this._parsedOptions.labelPermissibleInaccuracyOfVisibility,t),this._setData(e,"style.className",this._parsedOptions.labelClassName,t),this._setData(e,"style.textSize",this._parsedOptions.labelTextSize,t),this._setData(e,"style.textColor",this._parsedOptions.labelTextColor,t),e},t.prototype._setData=function(t,e,o,n){function a(t,e){t.length>1?a(t.slice(1),e[t[0]]):e[t[0]]=o[n]}var i=e.split(".");o&&o[n]&&a(i,t)},t.prototype._parseOptions=function(t){var o={};return e(t).forEach(function(e){o[e]=n(t[e])}),o},t.prototype._createDefaultZoomInfo=function(){return{isCalculated:0,visible:"none",visibleForce:"auto",center:void 0,style:{className:void 0,textSize:void 0,textColor:void 0},labelSize:{height:0,width:0},labelOffset:[0,0],permissibleInaccuracyOfVisibility:0}},t}())}),ymaps.modules.define("src.label.ObjectManager.Label",["util.extend","util.objectKeys","src.label.util.LabelPlacemarkOverlay","src.label.LabelData","src.label.util.getLayoutTemplate"],function(t,e,o,n,a,i){function l(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}t(function(){function t(e,o,n,a){l(this,t),this._map=e,this._polygon=o,this._objectManager=n,this._placemark={label:null,dot:null},this._layout={label:null,dot:null},this._layoutTemplateCache=a,this._init()}return t.prototype.destroy=function(){this.removeFromCollection()},t.prototype.getPlacemark=function(t){return this._placemark[t]},t.prototype.getLayout=function(t){return this._layout[t]},t.prototype.addToObjectManager=function(){var t=this;["label","dot"].forEach(function(e){t._objectManager.add(t._placemark[e])})},t.prototype.removeFromCollection=function(){var t=this;["label","dot"].forEach(function(e){t._objectManager.remove(t._placemark[e])}),this._polygon=null,this._objectManager=null,this._placemark=null,this._layout=null,this._data=null},t.prototype._init=function(){var o=this,n=i(this._polygon.options,this._layoutTemplateCache);["label","dot"].forEach(function(a){o._placemark[a]=t._createPlacemark(a+"#"+o._polygon.id,{properties:e({},{labelPolygon:o._polygon},o._polygon.properties),options:o._polygon.options},n[a])})},t._createPlacemark=function(t,o,a){return{type:"Feature",id:t,options:e({},{iconLayout:a,iconLabelPosition:"absolute",overlay:n,pane:"phantom"},o.options),properties:o.properties,geometry:{type:"Point",coordinates:[0,0]}}},t.prototype._updateOptions=function(t,e){this._objectManager.objects.setObjectOptions(t,e)},t.prototype.setLabelData=function(t,e){return this._data=new a(this._polygon,t,e,this._map,this),this._data},t.prototype.getLabelData=function(){return this._data},t.prototype.setLayout=function(t,e){this._layout[t]=e},t.prototype.setLayoutTemplate=function(){var t=this,e=i(this._polygon.options,this._layoutTemplateCache);o(e).forEach(function(o){t._updateOptions(t._placemark[o].id,{iconLayout:e[o]})})},t.prototype.setNewOptions=function(t){var o=this;["dot","label"].forEach(function(n){o._updateOptions(o._placemark[n].id,e({},o._placemark[n].options,t))})},t.prototype.setDataByZoom=function(t,e,o){var n=this,a=this._data.getAll(),i={};return e.forEach(function(e){"label"===e&&n.setStyles(a.zoomInfo[t].style),n._data.setZoomDataForType(e,t);var l=n._data.getAll(),s=l.zoomInfo,r=l.autoCenter,c=l.dotVisible,p=l.dotSize;s=s[t],n.setCoordinates(s.center||r);var u="auto"===(o=o||s.visibleForce)?s.visible:o;"dot"!==u||c||(u="none"),n.setVisibility(u),-1!==["dot","label"].indexOf(u)&&n.setCenterAndIconShape(u,"dot"===u?p:s.labelSize,s.labelOffset),i={visible:s.visible,visibleForce:s.visibleForce,visibleType:u}}),i},t.prototype.setCenterAndIconShape=function(t,e,o){var n=e.height/2,a=e.width/2;this._updateOptions(this._placemark[t].id,{iconShape:{type:"Rectangle",coordinates:[[-a+o[1],-n+o[0]],[a+o[1],n+o[0]]]},iconLabelTop:-n+o[0],iconLabelLeft:-a+o[1]})},t.prototype.setCoordinates=function(t){var e=this;t.toString()!==this._placemark.label.geometry.coordinates.toString()&&["dot","label"].forEach(function(o){e._objectManager.remove(e._placemark[o]),e._generateNewPlacemark(o),e._placemark[o].geometry.coordinates=t,e._objectManager.add(e._placemark[o])})},t.prototype.setStyles=function(t){this._updateOptions(this._placemark.label.id,{iconLabelClassName:t.className,iconLabelTextSize:t.textSize,iconLabelTextColor:t.textColor})},t.prototype.setVisibility=function(t){var e=this;o(this._placemark).forEach(function(o){var n=o===t?"places":"phantom";e._updateOptions(e._placemark[o].id,{pane:n})})},t.prototype._generateNewPlacemark=function(t){this._placemark[t]=e({},this._placemark[t]);var o=this._placemark[t].id;this._placemark[t].id="_"===o[0]?o.slice(1):"_"+o},t}())}),ymaps.modules.define("src.label.ObjectManager.Label1",["util.extend","util.objectKeys","Placemark","src.label.util.LabelPlacemarkOverlay","src.label.util.createLabelLayoutTemplate","src.label.util.createDotLayoutTemplate","src.label.util.getLabelLayout","src.label.LabelData"],function(t,e,o,n,a,i,l,s,r){function c(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}t(function(){function t(e,o,n){c(this,t),this._polygon=e,this._objectManager=o,this._placemark={label:null,dot:null},this._layout={label:null,dot:null},this._layoutTemplateCache=n,this._init()}return t.prototype.destroy=function(){this.removeFromCollection()},t.prototype.getPlacemark=function(t){return this._placemark[t]},t.prototype.getLayout=function(t){return this._layout[t]},t.prototype.addToObjectManager=function(){var t=this;["label","dot"].forEach(function(e){t._objectManager.add(t._placemark[e])})},t.prototype.removeFromCollection=function(){var t=this;["label","dot"].forEach(function(e){t._objectManager.remove(t._placemark[e])}),this._polygon=null,this._objectManager=null,this._placemark=null},t.prototype._init=function(){var o=this,n=this._getLayoutTemplate(this._polygon.options,this._layoutTemplateCache),a={label:n.labelLayout,dot:n.labelDotLayout};["label","dot"].forEach(function(n){o._placemark[n]=t._createPlacemark(n+"#"+o._polygon.id,{properties:e({},{_labelPolygon:o._polygon},o._polygon.properties),options:o._polygon.options},a[n])})},t._createPlacemark=function(t,o,n){return{type:"Feature",id:t,options:e({},{iconLayout:n,iconLabelPosition:"absolute",pointOverlay:a,pane:"phantom"},o.options),properties:o.properties,geometry:{type:"Point",coordinates:[0,0]}}},t.prototype._updateOptions=function(t,e){this._objectManager.objects.setObjectOptions(t,e)},t.prototype.setLabelData=function(t,e){return this._data=new r(this._polygon,t,e),this._data},t.prototype.getLabelData=function(){return this._data},t.prototype.setLayout=function(t,e){this._layout[t]=e},t.prototype.setDataByZoom=function(t,e){var o=this._data.getAll(),n=o.zoomInfo,a=o.autoCenter,i=o.dotVisible;n=n[t],this.setCoordinates(n.center||a);var l="auto"===(e=e||n.visibleForce)?n.visible:e;return"dot"!==l||i||(l="none"),this.setVisibility(l),-1!==["dot","label"].indexOf(l)&&this.setCenterAndIconShape(l,"dot"===l?this._data.getData("dotSize"):n.labelSize,n.labelOffset),this.setStyles(n.style),{visible:n.visible,visibleForce:n.visibleForce,visibleType:l}},t.prototype.setCenterAndIconShape=function(t,e,o){var n=e.height/2,a=e.width/2;this._updateOptions(this._placemark[t].id,{iconShape:{type:"Rectangle",coordinates:[[-a+o[1],-n+o[0]],[a+o[1],n+o[0]]]},iconLabelTop:-n+o[0],iconLabelLeft:-a+o[1]})},t.prototype.setCoordinates=function(t){var e=this;t.toString()!==this._placemark.label.geometry.coordinates.toString()&&["dot","label"].forEach(function(o){e._objectManager.remove(e._placemark[o]),e._generateNewPlacemark(o),e._placemark[o].geometry.coordinates=t,e._objectManager.add(e._placemark[o])})},t.prototype.setStyles=function(t){this._updateOptions(this._placemark.label.id,{iconLabelClassName:t.className,iconLabelTextSize:t.textSize,iconLabelTextColor:t.textColor})},t.prototype.setVisibility=function(t){var e=this;o(this._placemark).forEach(function(o){var n=o===t?"places":"phantom";e._updateOptions(e._placemark[o].id,{pane:n})})},t.prototype._generateNewPlacemark=function(t){this._placemark[t]=e({},this._placemark[t]);var o=this._placemark[t].id;this._placemark[t].id="_"===o[0]?o.slice(1):"_"+o},t.prototype._getLayoutTemplate=function(t,e){return["labelLayout","labelDotLayout"].reduce(function(o,n){var a=t[n],s=a||"default"+n;if(e[s])o[n]=e[s];else{var r={labelLayout:i,labelDotLayout:l}[n](a);o[n]=r,e[s]=r}return o},{})},t}())}),ymaps.modules.define("src.label.util.createDotLayoutTemplate",["templateLayoutFactory"],function(t,e){t(function(t){return void 0===t&&(t="<div {% style %}background-color: red;\n    width: 10px; height: 10px; border-radius: 50px;{% endstyle %}></div>"),e.createClass("\n    <div {% style %}position: {{options.labelPosition}};\n        top: {{options.labelTop}}px; left: {{options.labelLeft}}px; {% endstyle %}>\n        "+t+"\n    </div>")})}),ymaps.modules.define("src.label.util.createLabelLayoutTemplate",["templateLayoutFactory"],function(t,e){t(function(t){return e.createClass('\n    <div {% style %}position: {{options.labelPosition}};\n        top: {{options.labelTop}}px; left: {{options.labelLeft}}px; {% endstyle %}>\n        <div class="{{options.labelClassName}}"\n            {% style %}text-align: center; font-size: {{options.labelTextSize}}px;\n            color: {{options.labelTextColor}}; {% endstyle %}>\n            '+t+"\n        </div>\n    </div>")})}),ymaps.modules.define("src.label.util.getLabelLayout",[],function(t){t(function(t){return t.getOverlay().then(function(t){return t.getLayout()})})}),ymaps.modules.define("src.label.util.getLayoutSize",[],function(t){t(function(t){var e=t&&t.getElement();if(e){var o=e.children[0].getBoundingClientRect();return{width:o.width,height:o.height}}})}),ymaps.modules.define("src.label.util.getLayoutTemplate",["src.label.util.createLabelLayoutTemplate","src.label.util.createDotLayoutTemplate"],function(t,e,o){t(function(t,n){var a={labelLayout:e,labelDotLayout:o},i=["labelLayout","labelDotLayout"].reduce(function(e,o){var i=t[o],l=i||"default"+o;if(n[l])e[o]=n[l];else{var s=a[o](i);e[o]=s,n[l]=s}return e},{});return{label:i.labelLayout,dot:i.labelDotLayout}})}),ymaps.modules.define("src.label.util.LabelPlacemarkOverlay",["util.defineClass","overlay.Placemark","GeoObject"],function(t,e,o,n){function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}t(function(t){function o(e,n,l){return a(this,o),i(this,t.call(this,e,n,l))}return e(o,t),o.prototype.getData=function(){var t=this._data.geoObject instanceof n?this._data.geoObject.properties.get("labelPolygon"):this._data.properties.labelPolygon;return{geoObject:t,properties:t.properties,state:t.state}},o}(o))}),ymaps.modules.define("src.polylabel.PolylabelBase",["src.config","GeoObject"],function(t,e,o){function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}t(function(){function t(e){n(this,t),this._map=e}return t.prototype.initMapListeners=function(t){this._mapBoundsChangeCallback=t,this._map.events.add("boundschange",this._mapBoundsChangeHandler,this)},t.prototype.destroyMapListeners=function(){this._map.events.remove("boundschange",this._mapBoundsChangeHandler,this)},t.prototype._mapBoundsChangeHandler=function(t){t.get("newZoom")!==t.get("oldZoom")&&this._mapBoundsChangeCallback()},t.prototype.getOptions=function(t){return e.options.reduce(function(e,n){return e[n]=t instanceof o?t.options.get(n):t.options[n],e},{})},t.prototype.getZoomRangeOptions=function(t){return e.zoomRangeOptions.reduce(function(e,n){return e[n]=t instanceof o?t.options.get(n):t.options[n],e},{})},t.prototype.getProperties=function(t){return e.properties.reduce(function(e,n){return e[n]=t instanceof o?t.properties.get(n):t.properties[n],e},{})},t}())}),ymaps.modules.define("src.polylabel.PolylabelCollection",["util.defineClass","src.polylabel.PolylabelBase","src.label.GeoObjectCollection.Label","GeoObjectCollection","Monitor","system.nextTick","data.Manager","event.Manager","Event"],function(t,e,o,n,a,i,l,s,r,c){function p(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}t(function(t){function o(e,n){p(this,o);var i=u(this,t.call(this,e));return i._map=e,i._labelsCollection=new a,i._labelsState=new WeakMap,i._polygonsCollection=n,i._currentConfiguredVisibility=new WeakMap,i._currentVisibility=new WeakMap,i._layoutTemplateCache={},i._isPolygonParentChange=new WeakMap,i._initData(),i}return e(o,t),o.prototype.destroy=function(){this._deleteLabelStateListeners(),this._deletePolygonsListeners(),this._deletePolygonCollectionListeners(),this._deleteLabelCollection(),this._map.geoObjects.remove(this._labelsCollection)},o.prototype.getLabelState=function(t){return this._labelsState.get(t)},o.prototype.getConfiguredVisibility=function(t){return this._currentConfiguredVisibility.get(t)},o.prototype.getCurrentVisibility=function(t){return this._currentVisibility.get(t)},o.prototype._initData=function(){var t=this;this._map.geoObjects.add(this._labelsCollection),this._firstCalculatePolygonsCollection().then(function(){t._initMapListeners(),t._initPolygonCollectionListeners(),t._initPolygonsListeners(),t._initLabelCollectionListeners()})},o.prototype._firstCalculatePolygonsCollection=function(){var t=this;this._clearLabelCollection();var e=[];return this._polygonsCollection.each(function(o){t._setInLabelState(o,"visible",void 0),t._initLabelStateListener(o),t._calculatePolygonLabelData(o).then(function(n){t._setInLabelState(o,"label",n),e.push(t._analyzeAndSetLabelData(o,t._getFromLabelState(o,"label")))})}),Promise.all(e)},o.prototype._calculatePolygonsCollection=function(){var t=this,e=[];return this._polygonsCollection.each(function(o){e.push(t._analyzeAndSetLabelData(o,t._getFromLabelState(o,"label")))}),Promise.all(e)},o.prototype._clearLabelCollection=function(){this._labelsCollection.removeAll(),this._labelsCollection.options.set({pane:"phantom"})},o.prototype._deleteLabelCollection=function(){var t=this;this._polygonsCollection.each(function(e){var o=t._getFromLabelState(e,"label");o&&o.destroy()}),this._clearLabelCollection()},o.prototype._calculatePolygonLabelData=function(t,e){var o=this.getOptions(t),a=this.getZoomRangeOptions(t),i=e?this._getFromLabelState(t,"label"):new n(this._map,t,this._labelsCollection,this._layoutTemplateCache);return i.setLabelData(o,a),i.addToCollection().then(function(){return i})},o.prototype._analyzeAndSetLabelData=function(t,e,o){var n=this;return e?(l(function(){var a=e.setDataByZoom(n._map.getZoom(),o);n._setCurrentConfiguredVisibility(t,a.visible,a.visibleForce),n._setCurrentVisibility(t,a.visibleType)}),Promise.resolve()):Promise.resolve()},o.prototype._setCurrentConfiguredVisibility=function(t,e,o){var n=o&&-1!==["dot","label","none"].indexOf(o)?o:e;this._currentConfiguredVisibility.set(t,n)},o.prototype._setCurrentVisibility=function(t,e){this._currentVisibility.set(t,-1!==["dot","label"].indexOf(e)?e:"none")},o.prototype._recalculateNewPolygon=function(t){var e=this;this._calculatePolygonLabelData(t).then(function(o){e._setInLabelState(t,"label",o),e._analyzeAndSetLabelData(t,e._getFromLabelState(t,"label")),e._initLabelStateListener(t)})},o.prototype._setInLabelState=function(t,e,o){var n=this._labelsState.get(t);n||(n=new s,this._labelsState.set(t,n)),n.set(e,o)},o.prototype._getFromLabelState=function(t,e){var o=this._labelsState.get(t);if(o)return o.get(e)},o.prototype._clearVisibilityInLabelsState=function(t){var e=this;this._polygonsCollection.each(function(o){e._setInLabelState(o,"visible",t)})},o.prototype._initLabelStateListener=function(t){var e=this,o=new i(this._labelsState.get(t));this._setInLabelState(t,"labelMonitor",o),o.add("visible",function(o){e._analyzeAndSetLabelData(t,e._getFromLabelState(t,"label"),o)})},o.prototype._initPolygonsListeners=function(){var t=this;this._polygonsCollection.each(function(e){t._initPolygonListener(e)})},o.prototype._initPolygonListener=function(t){t.events.add(["optionschange","propertieschange"],this._onPolygonOptionsChangeHandler,this),t.events.add("parentchange",this._onPolygonParentChangeHandler,this)},o.prototype._onPolygonParentChangeHandler=function(t){this._isPolygonParentChange.set(t.get("target"),2)},o.prototype._onPolygonOptionsChangeHandler=function(t){var e=this;l(function(){var o=t.get("target"),n=e._getFromLabelState(o,"label"),a=e._isPolygonParentChange.get(o);a>0||!n?e._isPolygonParentChange.set(t.get("target"),a-1):(n.setVisibility("phantom"),n.setLayoutTemplate(),e._calculatePolygonLabelData(o,!0).then(function(t){e._setInLabelState(o,"label",t),e._analyzeAndSetLabelData(o,e._getFromLabelState(o,"label"))}))})},o.prototype._initPolygonCollectionListeners=function(){this._polygonsCollection.events.add(["add","remove"],this._polygonCollectionEventHandler,this)},o.prototype._polygonCollectionEventHandler=function(t){switch(t.get("type")){case"add":this._recalculateNewPolygon(t.get("child"));break;case"remove":this._deleteLabelStateListener(t.get("child"));var e=this._getFromLabelState(t.get("child"),"label");e&&e.destroy()}},o.prototype._initLabelCollectionListeners=function(){var t=new r({controllers:[{onBeforeEventFiring:function(t,e,o){if("phantom"===o.get("target").options.get("pane"))return!1;var n=o.get("target").properties.get("labelPolygon");if(n){var a=new c({target:n,type:"label"+e},o);n.events.fire("label"+e,a)}return!1}}]});this._labelsCollection.events.setParent(t)},o.prototype._initMapListeners=function(){var t=this;this.initMapListeners(function(){t._clearVisibilityInLabelsState(),t._calculatePolygonsCollection()})},o.prototype._deleteLabelStateListeners=function(){var t=this;this._polygonsCollection.each(function(e){t._deleteLabelStateListener(e)})},o.prototype._deleteLabelStateListener=function(t){var e=this._getFromLabelState(t,"labelMonitor");e&&e.removeAll()},o.prototype._deletePolygonCollectionListeners=function(){this._polygonsCollection.events.remove(["add","remove"],this._polygonCollectionEventHandler,this),this.destroyMapListeners()},o.prototype._deletePolygonsListeners=function(){var t=this;this._polygonsCollection.each(function(e){t._deletePolygonListener(e)})},o.prototype._deletePolygonListener=function(t){t.events.remove(["optionschange","propertieschange"],this._onPolygonOptionsChangeHandler,this),t.events.remove("parentchange",this._onPolygonParentChangeHandler,this)},o}(o))}),ymaps.modules.define("src.polylabel.PolylabelObjectManager",["util.defineClass","util.objectKeys","src.polylabel.PolylabelBase","data.Manager","Monitor","ObjectManager","src.label.ObjectManager.Label","system.nextTick","event.Manager"],function(t,e,o,n,a,i,l,s,r,c){function p(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}t(function(t){function n(e,o){p(this,n);var a=u(this,t.call(this,e));return a._map=e,a._polygonsObjectManager=o,a._labelsObjectManager=new l,a._labelsState=new WeakMap,a._currentConfiguredVisibility=new WeakMap,a._currentVisibility=new WeakMap,a._layoutTemplateCache={},a._initData(),a}return e(n,t),n.prototype.destroy=function(){this._deleteLabelStateListeners(),this._deletePolygonsListeners(),this._deletePolygonCollectionListeners(),this._deleteLabelCollection(),this._layoutTemplateCache=null},n.prototype.getLabelState=function(t){return this._labelsState.get(t)},n.prototype.getConfiguredVisibility=function(t){return this._currentConfiguredVisibility.get(t)},n.prototype.getCurrentVisibility=function(t){return this._currentVisibility.get(t)},n.prototype._initData=function(){this._map.geoObjects.add(this._labelsObjectManager),this._initOverlaysListener(),this._firstCalculatePolygons(),this._initMapListeners(),this._initPolygonCollectionListeners(),this._initPolygonsListeners(),this._initLabelCollectionListeners()},n.prototype._firstCalculatePolygons=function(){var t=this;this._clearLabels(),this._polygonsObjectManager.objects.each(function(e){"Polygon"===e.geometry.type&&(t._setInLabelState(e,"visible",void 0),t._setInLabelState(e,"isNeedUpdate",!0),t._initLabelStateListener(e),t._calculatePolygonLabelData(e).then(function(o){t._setInLabelState(e,"label",o),o.addToObjectManager()}))})},n.prototype._calculatePolygons=function(){var t=this;this._polygonsObjectManager.objects.each(function(e){"Polygon"===e.geometry.type&&t._analyzeAndSetLabelData(e,["dot","label"],t._getFromLabelState(e,"label"))})},n.prototype._analyzeAndSetLabelData=function(t,e,o,n){if(!o)return Promise.resolve();var a=o.setDataByZoom(this._map.getZoom(),e,n);return this._setCurrentConfiguredVisibility(t,a.visible,a.visibleForce),this._setCurrentVisibility(t,a.visibleType),Promise.resolve()},n.prototype._setCurrentConfiguredVisibility=function(t,e,o){var n=o&&-1!==["dot","label","none"].indexOf(o)?o:e;this._currentConfiguredVisibility.set(t,n)},n.prototype._setCurrentVisibility=function(t,e){this._currentVisibility.set(t,-1!==["dot","label"].indexOf(e)?e:"none")},n.prototype._calculatePolygonLabelData=function(t,e){var o=this.getOptions(t),n=this.getZoomRangeOptions(t),a=e?this._getFromLabelState(t,"label"):new s(this._map,t,this._labelsObjectManager,this._layoutTemplateCache);return a.setLabelData(o,n),Promise.resolve(a)},n.prototype._initLabelStateListener=function(t){var e=this,o=new i(this._labelsState.get(t));this._setInLabelState(t,"labelMonitor",o),o.add("visible",function(o){e._analyzeAndSetLabelData(t,["dot","label"],e._getFromLabelState(t,"label"),o)})},n.prototype._initOverlaysListener=function(){this._labelsObjectManager.objects.overlays.events.add("add",this._overlaysAddHandler,this)},n.prototype._overlaysAddHandler=function(t){var e=this,o=String(t.get("objectId")),n=-1!==o.indexOf("label#")?"label":"dot",a=t.get("overlay");r(function(){a.getLayout().then(function(t){var a=e._labelsObjectManager.objects.getById(o);if(a){var i=a.properties.labelPolygon,l=e._getFromLabelState(i,"label");l.setLayout(n,t),e._analyzeAndSetLabelData(i,[n],l)}})})},n.prototype._setInLabelState=function(t,e,o){var n=this._labelsState.get(t);n||(n=new a,this._labelsState.set(t,n)),n.set(e,o)},n.prototype._getFromLabelState=function(t,e){var o=this._labelsState.get(t);if(o)return o.get(e)},n.prototype._clearLabels=function(){this._labelsObjectManager.removeAll()},n.prototype._clearVisibilityInLabelsState=function(){var t=this;this._polygonsObjectManager.objects.each(function(e){t._setInLabelState(e,"visible",void 0)})},n.prototype._initMapListeners=function(){var t=this;this.initMapListeners(function(){t._clearVisibilityInLabelsState(),t._calculatePolygons()})},n.prototype._initPolygonCollectionListeners=function(){this._polygonsObjectManager.objects.events.add(["add","remove"],this._polygonCollectionEventHandler,this)},n.prototype._polygonCollectionEventHandler=function(t){switch(t.get("type")){case"add":var e=this._polygonsObjectManager.objects.getById(t.get("objectId"));this._recalculateNewPolygon(e);break;case"remove":var o=t.get("child"),n=this._getFromLabelState(o,"label");n&&n.destroy()}},n.prototype._recalculateNewPolygon=function(t){var e=this;this._calculatePolygonLabelData(t).then(function(o){e._setInLabelState(t,"label",o),e._setInLabelState(t,"visible",void 0),e._setInLabelState(t,"isNeedUpdate",!0),e._initLabelStateListener(t),o.addToObjectManager()})},n.prototype._initPolygonsListeners=function(){this._polygonsObjectManager.objects.events.add(["optionschange","objectoptionschange"],this._onPolygonOptionsChangeHandler,this)},n.prototype._onPolygonOptionsChangeHandler=function(t){var e=this,o=this._polygonsObjectManager.objects.getById(t.get("objectId"));o&&this._calculatePolygonLabelData(o,!0).then(function(n){n.setVisibility("phantom"),e._setInLabelState(o,"label",n),n.setLayoutTemplate(),n.setNewOptions(o.options),e._getLabelsOverlays(t.get("objectId")).then(function(t){var a=["dot","label"];t.forEach(function(t,e){n.setLayout(a[e],t)}),e._analyzeAndSetLabelData(o,e._getFromLabelState(o,"label"))})})},n.prototype._getLabelsOverlays=function(t){var e=this,n=["dot","_dot","label","_label"].reduce(function(o,n){var a=e._labelsObjectManager.objects.overlays.getById(n+"#"+t),i="_"===n[0]?n.slice(1):n;return a&&(o[i]=a),o},{}),a=o(n).map(function(t){return n[t].getLayout()});return Promise.all(a)},n.prototype._initLabelCollectionListeners=function(){var t=this,e=new c({controllers:[{onBeforeEventFiring:function(e,o,n){var a=n.get("objectId");if(!a)return!1;var i=a.split("#")[1],l=t._polygonsObjectManager.objects.getById(i),s=t._labelsObjectManager.objects.getById(a);return(!s||"phantom"!==s.options.pane)&&(l&&t._polygonsObjectManager.events.fire("label"+o,{objectId:i,type:"label"+o}),!1)}}]});this._labelsObjectManager.events.setParent(e)},n.prototype._deleteLabelStateListeners=function(){var t=this;this._polygonsObjectManager.objects.each(function(e){"Polygon"===e.geometry.type&&t._deleteLabelStateListener(e)})},n.prototype._deleteLabelStateListener=function(t){var e=this._getFromLabelState(t,"labelMonitor");e&&e.removeAll()},n.prototype._deletePolygonsListeners=function(){this._polygonsObjectManager.objects.events.remove(["optionschange","objectoptionschange"],this._onPolygonOptionsChangeHandler,this)},n.prototype._deletePolygonCollectionListeners=function(){this._polygonsObjectManager.objects.events.remove(["add","remove"],this._polygonCollectionEventHandler,this),this.destroyMapListeners()},n.prototype._deleteLabelCollection=function(){var t=this;this._polygonsObjectManager.objects.each(function(e){var o=t._getFromLabelState(e,"label");"Polygon"===e.geometry.type&&o&&o.destroy()}),this._clearLabels()},n}(n))}),ymaps.modules.define("src.polylabel.PolylabelObjectManager1",["util.defineClass","src.polylabel.PolylabelBase","data.Manager","Monitor","ObjectManager","src.label.ObjectManager.Label1","src.label.LabelData","system.nextTick","src.util.zoom.setZoomVisibility","event.Manager"],function(t,e,o,n,a,i,l,s,r,c,p){function u(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function b(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}t(function(t){function o(e,n){u(this,o);var a=b(this,t.call(this,e));return a._map=e,a._polygonsObjectManager=n,a._labelsObjectManager=new i,a._labelsState=new WeakMap,a._currentConfiguredVisibility=new WeakMap,a._currentVisibility=new WeakMap,a._layoutTemplateCache={},a._initData(),a}return e(o,t),o.prototype.destroy=function(){this._deleteLabelStateListeners(),this._deletePolygonsListeners(),this._deletePolygonCollectionListeners(),this._deleteLabelCollection()},o.prototype.getLabelState=function(t){return this._labelsState.get(t)},o.prototype.getConfiguredVisibility=function(t){return this._currentConfiguredVisibility.get(t)},o.prototype.getCurrentVisibility=function(t){return this._currentVisibility.get(t)},o.prototype._initData=function(){this._map.geoObjects.add(this._labelsObjectManager),this._initOverlaysListener(),this._firstCalculatePolygons(),this._initMapListeners(),this._initPolygonCollectionListeners(),this._initPolygonsListeners(),this._initLabelCollectionListeners()},o.prototype._firstCalculatePolygons=function(){var t=this;this._clearLabels(),this._polygonsObjectManager.objects.each(function(e){"Polygon"===e.geometry.type&&(t._setInLabelState(e,"visible",void 0),t._setInLabelState(e,"isNeedUpdate",!0),t._initLabelStateListener(e),t._calculatePolygonLabelData(e).then(function(o){t._setInLabelState(e,"label",o),o.addToObjectManager()}))})},o.prototype._calculatePolygons=function(){var t=this;this._polygonsObjectManager.objects.each(function(e){"Polygon"===e.geometry.type&&t._analyzeAndSetLabelData(e,t._getFromLabelState(e,"label"))})},o.prototype._analyzeAndSetLabelData=function(t,e,o){if(!e)return Promise.resolve();var n=e.setDataByZoom(this._map.getZoom(),o);return this._setCurrentConfiguredVisibility(t,n.visible,n.visibleForce),this._setCurrentVisibility(t,n.visibleType),Promise.resolve()},o.prototype._setCurrentConfiguredVisibility=function(t,e,o){var n=o&&-1!==["dot","label","none"].indexOf(o)?o:e;this._currentConfiguredVisibility.set(t,n)},o.prototype._setCurrentVisibility=function(t,e){this._currentVisibility.set(t,-1!==["dot","label"].indexOf(e)?e:"none")},o.prototype._calculatePolygonLabelData=function(t,e){var o=this.getOptions(t),n=this.getZoomRangeOptions(t),a=(this.getProperties(t),e?this._getFromLabelState(t,"label"):new l(t,this._labelsObjectManager,this._layoutTemplateCache));return a.setLabelData(o,n),Promise.resolve(a)},o.prototype._initLabelStateListener=function(t){var e=this,o=new a(this._labelsState.get(t));this._setInLabelState(t,"labelMonitor",o),o.add("visible",function(o){e._analyzeAndSetLabelData(t,e._getFromLabelState(t,"label"),o)})},o.prototype._initOverlaysListener=function(){this._labelsObjectManager.objects.overlays.events.add("add",this._overlaysChangehandler,this)},o.prototype._overlaysChangehandler=function(t){var e=this,o=String(t.get("objectId")),n=-1!==o.indexOf("label#")?"label":"dot",a=t.get("overlay");r(function(){a.getLayout().then(function(t){var a=e._labelsObjectManager.objects.getById(o);if(a){var i=a.properties._labelPolygon,l=e._getFromLabelState(i,"label"),s=l.getLabelData();l.setLayout(n,t),e._getFromLabelState(i,"isNeedUpdate")&&c(e._map,s,l).then(function(){e._setInLabelState(i,"isNeedUpdate",!1),e._analyzeAndSetLabelData(i,l)})}})})},o.prototype._setInLabelState=function(t,e,o){var a=this._labelsState.get(t);a||(a=new n,this._labelsState.set(t,a)),a.set(e,o)},o.prototype._getFromLabelState=function(t,e){var o=this._labelsState.get(t);if(o)return o.get(e)},o.prototype._clearLabels=function(){this._labelsObjectManager.removeAll()},o.prototype._clearVisibilityInLabelsState=function(){var t=this;this._polygonsObjectManager.objects.each(function(e){t._setInLabelState(e,"visible",void 0)})},o.prototype._initMapListeners=function(){var t=this;this.initMapListeners(function(){t._clearVisibilityInLabelsState(),t._calculatePolygons()})},o.prototype._initPolygonCollectionListeners=function(){this._polygonsObjectManager.objects.events.add(["add","remove"],this._polygonCollectionEventHandler,this)},o.prototype._polygonCollectionEventHandler=function(t){switch(t.get("type")){case"add":var e=this._polygonsObjectManager.objects.getById(t.get("objectId"));this._recalculateNewPolygon(e);break;case"remove":var o=t.get("child"),n=this._getFromLabelState(o,"label");n&&n.destroy()}},o.prototype._recalculateNewPolygon=function(t){var e=this;this._calculatePolygonLabelData(t).then(function(o){e._setInLabelState(t,"label",o),e._setInLabelState(t,"visible",void 0),e._setInLabelState(t,"isNeedUpdate",!0),e._initLabelStateListener(t),o.addToObjectManager()})},o.prototype._initPolygonsListeners=function(){this._polygonsObjectManager.objects.events.add(["optionschange","objectoptionschange"],this._onPolygonOptionsChangeHandler,this)},o.prototype._onPolygonOptionsChangeHandler=function(t){var e=this._polygonsObjectManager.objects.getById(t.get("objectId"));e&&this._calculatePolygonLabelData(e,!0).then(function(t){})},o.prototype._initLabelCollectionListeners=function(){var t=this,e=new p({controllers:[{onBeforeEventFiring:function(e,o,n){var a=n.get("objectId");if(!a)return!1;var i=a.split("#")[1],l=t._polygonsObjectManager.objects.getById(i),s=t._labelsObjectManager.objects.getById(a);return(!s||"phantom"!==s.options.pane)&&(l&&t._polygonsObjectManager.events.fire("label"+o,{objectId:i,type:"label"+o}),!1)}}]});this._labelsObjectManager.events.setParent(e)},o.prototype._deleteLabelStateListeners=function(){var t=this;this._polygonsObjectManager.objects.each(function(e){"Polygon"===e.geometry.type&&t._deleteLabelStateListener(e)})},o.prototype._deleteLabelStateListener=function(t){var e=this._getFromLabelState(t,"labelMonitor");e&&e.removeAll()},o.prototype._deletePolygonsListeners=function(){this._polygonsObjectManager.objects.events.remove(["optionschange","objectoptionschange"],this._onPolygonOptionsChangeHandler,this)},o.prototype._deletePolygonCollectionListeners=function(){this._polygonsObjectManager.objects.events.remove(["add","remove"],this._polygonCollectionEventHandler,this),this.destroyMapListeners()},o.prototype._deleteLabelCollection=function(){var t=this;this._polygonsObjectManager.objects.each(function(e){var o=t._getFromLabelState(e,"label");"Polygon"===e.geometry.type&&o&&o.destroy()}),this._clearLabels()},o}(o))}),ymaps.modules.define("util.createPolylabel",["src.polylabel.PolylabelCollection","src.polylabel.PolylabelObjectManager","ObjectManager"],function(t,e,o,n){t(function(t,a){return a instanceof n?new o(t,a):new e(t,a)})}),ymaps.modules.define("src.util.checkPointPosition",[],function(t){function e(t,e,i){var l=o(i,e),s=o(t,e),r=l[0]*s[1]-s[0]*l[1];return r>0?"LEFT":r<0?"RIGHT":l[0]*s[0]<0||l[1]*s[1]<0?"BEHIND":n(l)<n(s)?"BEYOND":a(e,t)?"ORIGIN":a(i,t)?"DESTINATION":"BETWEEN"}function o(t,e){return[t[0]-e[0],t[1]-e[1]]}function n(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2))}function a(t,e){return t[0]===e[0]&&t[1]===e[1]}function i(t,o){var n=o[0],a=o[1];switch(e(t,n,a)){case"LEFT":return n[1]<t[1]&&t[1]<=a[1]?"CROSSING":"INESSENTIAL";case"RIGHT":return a[1]<t[1]&&t[1]<=n[1]?"CROSSING":"INESSENTIAL";case"BETWEEN":case"ORIGIN":case"DESTINATION":return"TOUCHING";default:return"INESSENTIAL"}}t(function(t,e){for(var o=0,n=0;n<e.length-1;n++)switch(i(t,[e[n],e[n+1]])){case"TOUCHING":return"BOUNDARY";case"CROSSING":o=1-o}return o?"INSIDE":"OUTSIDE"})}),ymaps.modules.define("src.util.createDefaultLabelData",["src.config"],function(t,e){var o=e.MIN_ZOOM,n=e.MAX_ZOOM;t(function(){for(var t={zoomInfo:{},autoCenter:[0,0],polygonIndex:0,dotSize:{height:0,width:0}},e=o;e<=n;e++)t.zoomInfo[e]={visible:"none",visibleForce:"auto",center:void 0,style:{className:void 0,textSize:void 0,textColor:void 0},labelSize:{height:0,width:0},labelOffset:[0,0],permissibleInaccuracyOfVisibility:0};return t})}),ymaps.modules.define("src.util.getPolesOfInaccessibility",["util.calculateArea","GeoObject"],function(t,e,o){function n(t,e){if(!(this instanceof n))return new n(t,e);if(this.data=t||[],this.length=this.data.length,this.compare=e||a,this.length>0)for(var o=this.length>>1;o>=0;o--)this._down(o)}function a(t,e){return t<e?-1:t>e?1:0}function i(t,e,o){e=e||1;for(var n,a,i,r,p=0;p<t[0].length;p++){var b=t[0][p];(!p||b[0]<n)&&(n=b[0]),(!p||b[1]<a)&&(a=b[1]),(!p||b[0]>i)&&(i=b[0]),(!p||b[1]>r)&&(r=b[1])}var y=i-n,h=r-a,f=Math.min(y,h),_=f/2,d=new u(null,l);if(0===f)return[n,a];for(var g=n;g<i;g+=f)for(var m=a;m<r;m+=f)d.push(new s(g+_,m+_,_,t));var v=c(t),L=new s(n+y/2,a+h/2,0,t);L.d>v.d&&(v=L);for(var C=d.length;d.length;){var O=d.pop();O.d>v.d&&(v=O,o&&console.error("found best %d after %d probes",Math.round(1e4*O.d)/1e4,C)),O.max-v.d<=e||(_=O.h/2,d.push(new s(O.x-_,O.y-_,_,t)),d.push(new s(O.x+_,O.y-_,_,t)),d.push(new s(O.x-_,O.y+_,_,t)),d.push(new s(O.x+_,O.y+_,_,t)),C+=4)}return o&&(console.error("num probes: "+C),console.error("best distance: "+v.d)),[v.x,v.y]}function l(t,e){return e.max-t.max}function s(t,e,o,n){this.x=t,this.y=e,this.h=o,this.d=r(t,e,n),this.max=this.d+this.h*Math.SQRT2}function r(t,e,o){for(var n=!1,a=1/0,i=0;i<o.length;i++)for(var l=o[i],s=0,r=l.length,c=r-1;s<r;c=s++){var u=l[s],b=l[c];u[1]>e!=b[1]>e&&t<(b[0]-u[0])*(e-u[1])/(b[1]-u[1])+u[0]&&(n=!n),a=Math.min(a,p(t,e,u,b))}return(n?1:-1)*Math.sqrt(a)}function c(t){for(var e=0,o=0,n=0,a=t[0],i=0,l=a.length,r=l-1;i<l;r=i++){var c=a[i],p=a[r],u=c[0]*p[1]-p[0]*c[1];o+=(c[0]+p[0])*u,n+=(c[1]+p[1])*u,e+=3*u}return 0===e?new s(a[0][0],a[0][1],0,t):new s(o/e,n/e,0,t)}function p(t,e,o,n){var a=o[0],i=o[1],l=n[0]-a,s=n[1]-i;if(0!==l||0!==s){var r=((t-a)*l+(e-i)*s)/(l*l+s*s);r>1?(a=n[0],i=n[1]):r>0&&(a+=l*r,i+=s*r)}return l=t-a,s=e-i,l*l+s*s}t(function(t,n,a){if(void 0===e)throw new Error("Didn't find calculateArea module");var l=Number.MIN_VALUE,s=0,r=void 0;if(t.length>1){for(var c=0;c<t.length;c++){var p=new o({geometry:{type:"Polygon",coordinates:[t[c]]}}),u=Math.round(e(p));l<u&&(l=u,s=c)}r=[t[s]]}else r=t;return{center:i(r,n,a),index:s}}),n.prototype={push:function(t){this.data.push(t),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var t=this.data[0];return--this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),t}},peek:function(){return this.data[0]},_up:function(t){for(var e=this.data,o=this.compare,n=e[t];t>0;){var a=t-1>>1,i=e[a];if(o(n,i)>=0)break;e[t]=i,t=a}e[t]=n},_down:function(t){for(var e=this.data,o=this.compare,n=this.length>>1,a=e[t];t<n;){var i=1+(t<<1),l=i+1,s=e[i];if(l<this.length&&o(e[l],s)<0&&(i=l,s=e[l]),o(s,a)>=0)break;e[t]=s,t=i}e[t]=a}};var u=n}),ymaps.modules.define("src.util.stringReplacer",[],function(t){t(function(t,e){var o=t;return e.forEach(function(t,e){o=o.replace(new RegExp("\\$"+(e+1),"g"),t)}),o})}),ymaps.modules.define("src.util.zoom.getFirstZoomInside",["src.util.checkPointPosition","src.config"],function(t,e,o){function n(t,e,o,n,a,i){var l=t.options.get("projection").toGlobalPixels(e,o),s=n.width,r=n.height;r+=a[0],s+=a[1];var c=[],p=[];return c.push([l[0]-s/2,l[1]-r/2],[l[0]-s/2,l[1]+r/2],[l[0]+s/2,l[1]-r/2],[l[0]+s/2,l[1]+r/2]),p.push([c[0][0]+i>l[0]?l[0]:c[0][0]+i,c[0][1]+i>l[1]?l[1]:c[0][1]+i],[c[1][0]+i>l[0]?l[0]:c[1][0]+i,c[1][1]-i<l[1]?l[1]:c[1][1]-i],[c[2][0]-i<l[0]?l[0]:c[2][0]-i,c[2][1]+i>l[1]?l[1]:c[2][1]+i],[c[3][0]-i<l[0]?l[0]:c[3][0]-i,c[3][1]-i<l[1]?l[1]:c[3][1]-i]),{normal:c,withInaccuracy:p}}function a(t,o,n,a){for(var i=0;i<n.length;i++){var l=t.options.get("projection").fromGlobalPixels(n[i],a);if("INSIDE"!==e(l,o))return!1}return!0}t(function(t,e,i,l,s,r){for(var c=o.MIN_ZOOM,p=o.MAX_ZOOM,u=void 0;c<p;){u=Math.floor((c+p)/2);var b=isNaN(Number(r))?0:Number(r),y=n(t,e,u,l,s||[0,0],b);a(t,i,y.normal,u)||0!==b&&a(t,i,y.withInaccuracy,u)?p=u:c=u+1}return c})}),ymaps.modules.define("src.util.zoom.parseZoomData",["util.array","util.objectKeys","src.config"],function(t,e,o,n){function a(t,e,o){t[e]=o}function i(t,e,o){if(isNaN(Number(e))){var n=e.split("_").map(Number);if(!isNaN(n[0])&&!isNaN(n[1]))for(var a=n[0]<r?r:n[0],i=n[1]>c?c:n[1];a<=i;)t[a]=o,a++}else t[Number(e)]=o}function l(t){for(var e={},o=r;o<=c;o++)e[o]=t;return e}var s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r=n.MIN_ZOOM,c=n.MAX_ZOOM;t(function(t){var n=["number","string","boolean","object"];return t&&!e.isArray(t)&&"object"===(void 0===t?"undefined":s(t))?o(t).reduce(function(e,o){return"string"==typeof o?i(e,o,t[o]):"number"==typeof o&&a(e,o,t[o]),e},l()):n.includes(void 0===t?"undefined":s(t))?l(t):void 0})}),ymaps.modules.define("src.util.zoom.setOneZoomVisibility",["src.util.zoom.getFirstZoomInside","src.label.util.getLayoutSize"],function(t,e,o){function n(t,e,o){var n=["none","dot","label"],a=t;return o&&(a=n.indexOf(e)>n.indexOf(t)?e:t),a}var a={label:function(t,a,i,l,s,r){var c=l.getAll(),p=c.zoomInfo[a],u=o(r);if(u){l.setZoomInfo(a,"labelSize",u);var b=e(t,p.center||c.autoCenter,s,u,p.labelOffset,p.permissibleInaccuracyOfVisibility);l.setZoomInfo(a,"visible",n(p.visible,"label",a>=b))}},dot:function(t,a,i,l,s,r){var c=l.getAll(),p=l.getZoomInfo(a);if(c.dotFirstZoom)l.setZoomInfo(a,"visible",n(p.visible,"dot",a>=c.dotFirstZoom));else{var u=o(r);if(u){l.setData("dotSize",u);var b=e(t,p.center||c.autoCenter,s,u,p.labelOffset,p.permissibleInaccuracyOfVisibility);l.setZoomInfo(a,"visible",n(p.visible,"dot",a>=b)),l.setData("dotFirstZoom",b)}}}};t(function(t,e,o,n){var i=o.getLabelData(),l=i.getPolygonCoords();a[n](t,e,o,i,l,o.getLayout(n))})}),ymaps.modules.define("src.util.zoom.setZoomVisibility",["util.objectKeys","src.util.zoom.getFirstZoomInside","src.label.util.getLayoutSize"],function(t,e,o,n){function a(t,e,o){var n=["none","dot","label"],a=t;return o&&(a=n.indexOf(e)>n.indexOf(t)?e:t),a}function i(t,n,i,l,s,r){var c=i.getAll();e(c.zoomInfo).forEach(function(e){var n=i.getZoomInfo(e),s=o(t,n.center||c.autoCenter,l,r,n.labelOffset,n.permissibleInaccuracyOfVisibility);i.setZoomInfo(e,"visible",a(n.visible,"dot",e>=s))})}function l(t,e,i,l,s,r,c){var p=i.getAll(),u=p.zoomInfo[l],b=(u.center||p.autoCenter,u.style.className,u.style.textSize,n(r));if(b){e.setStyles(u.style),i.setZoomInfo(l,"labelSize",b);var y=o(t,u.center||p.autoCenter,s,b,u.labelOffset,u.permissibleInaccuracyOfVisibility);i.setZoomInfo(l,"visible",a(u.visible,"label",l>=y))}}t(function(t,o){var a=o.getLabelData(),s=a.getPolygonCoords(),r=n(o.getLayout("dot"));r&&(a.setData("dotSize",r),i(t,0,a,s,o.getLayout("dot"),r));return e(a.getZoomInfo()).forEach(function(e){l(t,o,a,e,s,o.getLayout("label"))}),Promise.resolve()})});