ymaps.modules.define("util.calculateArea",[],function(e){function t(e){if("Feature"==e.type)return e.geometry;if(e.geometry&&e.geometry.getType)return"Circle"==e.geometry.getType()?{type:"Circle",coordinates:e.geometry.getCoordinates(),radius:e.geometry.getRadius()}:{type:e.geometry.getType(),coordinates:e.geometry.getCoordinates()};throw new Error("util.calculateArea: Unknown input object.")}function n(e){var t,n=0;switch(e.type){case"Polygon":return r(e.coordinates);case"MultiPolygon":for(t=0;t<e.coordinates.length;t++)n+=r(e.coordinates[t]);return n;case"Rectangle":return r([[e.coordinates[0],[e.coordinates[0][0],e.coordinates[1][1]],e.coordinates[1],[e.coordinates[1][0],e.coordinates[0][1]],e.coordinates[0]]]);case"Circle":return Math.PI*Math.pow(e.radius,2);case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}}function r(e){var t=0;if(e&&e.length>0){t+=Math.abs(o(e[0]));for(var n=1;n<e.length;n++)t-=Math.abs(o(e[n]))}return t}function o(e){var t,n,r,o,s,c,u=0,h=e.length,l="latlong"==ymaps.meta.coordinatesOrder?1:0,d="latlong"==ymaps.meta.coordinatesOrder?0:1;if(h>2){for(c=0;c<h;c++)c===h-2?(r=h-2,o=h-1,s=0):c===h-1?(r=h-1,o=0,s=1):(r=c,o=c+1,s=c+2),t=e[r],n=e[o],u+=(i(e[s][l])-i(t[l]))*Math.sin(i(n[d]));u=u*a*a/2}return u}function i(e){return e*Math.PI/180}var a=6378137;e(function(e){return n(t(e))})}),ymaps.modules.define("checkPointPosition",[],function(e){function t(e,t,i){var a=n(i,t),s=n(e,t),c=a[0]*s[1]-s[0]*a[1];return c>0?"LEFT":c<0?"RIGHT":a[0]*s[0]<0||a[1]*s[1]<0?"BEHIND":r(a)<r(s)?"BEYOND":o(t,e)?"ORIGIN":o(i,e)?"DESTINATION":"BETWEEN"}function n(e,t){return[e[0]-t[0],e[1]-t[1]]}function r(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2))}function o(e,t){return e[0]===t[0]&&e[1]===t[1]}function i(e,n){var r=n[0],o=n[1];switch(t(e,r,o)){case"LEFT":return r[1]<e[1]&&e[1]<=o[1]?"CROSSING":"INESSENTIAL";case"RIGHT":return o[1]<e[1]&&e[1]<=r[1]?"CROSSING":"INESSENTIAL";case"BETWEEN":case"ORIGIN":case"DESTINATION":return"TOUCHING";default:return"INESSENTIAL"}}e(function(e,t){for(var n=0,r=0;r<t.length-1;r++)switch(i(e,[t[r],t[r+1]])){case"TOUCHING":return"BOUNDARY";case"CROSSING":n=1-n}return n?"INSIDE":"OUTSIDE"})}),ymaps.modules.define("getPolesOfInaccessibility",["util.calculateArea"],function(e,t){function n(e,t){if(!(this instanceof n))return new n(e,t);if(this.data=e||[],this.length=this.data.length,this.compare=t||r,this.length>0)for(var o=this.length>>1;o>=0;o--)this._down(o)}function r(e,t){return e<t?-1:e>t?1:0}function o(e,t,n){t=t||1;for(var r,o,s,u,l=0;l<e[0].length;l++){var d=e[0][l];(!l||d[0]<r)&&(r=d[0]),(!l||d[1]<o)&&(o=d[1]),(!l||d[0]>s)&&(s=d[0]),(!l||d[1]>u)&&(u=d[1])}var f=s-r,p=u-o,g=Math.min(f,p),m=g/2,y=new h(null,i);if(0===g)return[r,o];for(var v=r;v<s;v+=g)for(var I=o;I<u;I+=g)y.push(new a(v+m,I+m,m,e));var w=c(e),N=new a(r+f/2,o+p/2,0,e);N.d>w.d&&(w=N);for(var b=y.length;y.length;){var E=y.pop();E.d>w.d&&(w=E,n&&console.error("found best %d after %d probes",Math.round(1e4*E.d)/1e4,b)),E.max-w.d<=t||(m=E.h/2,y.push(new a(E.x-m,E.y-m,m,e)),y.push(new a(E.x+m,E.y-m,m,e)),y.push(new a(E.x-m,E.y+m,m,e)),y.push(new a(E.x+m,E.y+m,m,e)),b+=4)}return n&&(console.error("num probes: "+b),console.error("best distance: "+w.d)),[w.x,w.y]}function i(e,t){return t.max-e.max}function a(e,t,n,r){this.x=e,this.y=t,this.h=n,this.d=s(e,t,r),this.max=this.d+this.h*Math.SQRT2}function s(e,t,n){for(var r=!1,o=1/0,i=0;i<n.length;i++)for(var a=n[i],s=0,c=a.length,h=c-1;s<c;h=s++){var l=a[s],d=a[h];l[1]>t!=d[1]>t&&e<(d[0]-l[0])*(t-l[1])/(d[1]-l[1])+l[0]&&(r=!r),o=Math.min(o,u(e,t,l,d))}return(r?1:-1)*Math.sqrt(o)}function c(e){for(var t=0,n=0,r=0,o=e[0],i=0,s=o.length,c=s-1;i<s;c=i++){var u=o[i],h=o[c],l=u[0]*h[1]-h[0]*u[1];n+=(u[0]+h[0])*l,r+=(u[1]+h[1])*l,t+=3*l}return 0===t?new a(o[0][0],o[0][1],0,e):new a(n/t,r/t,0,e)}function u(e,t,n,r){var o=n[0],i=n[1],a=r[0]-o,s=r[1]-i;if(0!==a||0!==s){var c=((e-o)*a+(t-i)*s)/(a*a+s*s);c>1?(o=r[0],i=r[1]):c>0&&(o+=a*c,i+=s*c)}return a=e-o,s=t-i,a*a+s*s}n.prototype={push:function(e){this.data.push(e),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var e=this.data[0];return--this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),e}},peek:function(){return this.data[0]},_up:function(e){for(var t=this.data,n=this.compare,r=t[e];e>0;){var o=e-1>>1,i=t[o];if(n(r,i)>=0)break;t[e]=i,e=o}t[e]=r},_down:function(e){for(var t=this.data,n=this.compare,r=this.length>>1,o=t[e];e<r;){var i=1+(e<<1),a=i+1,s=t[i];if(a<this.length&&n(t[a],s)<0&&(i=a,s=t[a]),n(s,o)>=0)break;t[e]=s,e=i}t[e]=o}};var h=n;e(function(e,n,r){var i,a=Number.MIN_VALUE,s=0;if(e.length>1){for(var c=0;c<e.length;c++){var u=new ymaps.GeoObject({geometry:{type:"Polygon",coordinates:[e[c]]}}),h=Math.round(t(u));a<h&&(a=h,s=c)}i=[e[s]]}else i=e;return{center:o(i,n,r),index:s}})}),ymaps.modules.define("util.polylabel",["getPolesOfInaccessibility","util.nodeSize","checkPointPosition"],function(e,t,n,r){function o(e){var t=performance.now(),n=0;p.each(function(t){var r;e?(r=a(t.geometry.getCoordinates(),f[n]),m.push({firstZoomInside:r.firstZoomInside,center:r.center})):r=m[n],g.getZoom()>r.firstZoomInside&&d.add(i(r.center,f[n].innerText)),n++}),g.geoObjects.add(d),console.error(performance.now()-t)}function i(e,t){return new ymaps.GeoObject({geometry:{type:"Point",coordinates:e},properties:{iconContent:t}},{preset:"islands#blackStretchyIcon"})}function a(e,n){var r=t(e,1);return{center:r.center,firstZoomInside:u(r.center,e[r.index],s(n))}}function s(e){var t=document.createElement("div");t.style.display="inline-block",t.appendChild(e),document.body.appendChild(t);var n=ymaps.util.dom.style.getSize(e);return document.body.removeChild(t),{w:n[0],h:n[1]}}function c(){g.events.add("boundschange",function(e){e.get("newZoom")!==e.get("oldZoom")&&(g.geoObjects.remove(d),d.removeAll(),o())})}function u(e,t,n){for(var r,o=y,i=v;o<i;)l(t,h(e,r=Math.floor((o+i)/2),n),r)?i=r:o=r+1;return o}function h(e,t,n){var r=g.options.get("projection").toGlobalPixels(e,t),o=n.w,i=n.h,a=[];return a.push([r[0]-o/2,r[1]-i/2]),a.push([r[0]-o/2,r[1]+i/2]),a.push([r[0]+o/2,r[1]-i/2]),a.push([r[0]+o/2,r[1]+i/2]),a}function l(e,t,n){for(var o=0;o<t.length;o++){var i=g.options.get("projection").fromGlobalPixels(t[o],n);if("INSIDE"!==r(i,e))return!1}return!0}var d,f,p,g,m=[],y=0,v=19;e(function(e,t,n){d=new ymaps.GeoObjectCollection,f=t,g=n,p=e,c(),o(!0)})});