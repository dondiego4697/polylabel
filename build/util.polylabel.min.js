ymaps.modules.define("setCenter",["util.objectKeys","getPolesOfInaccessibility","parseZoomData"],function(t,e,o,n){t(function(t,i,a){var r=a.labelCenterCoords,l=o(i.geometry.getCoordinates(),1);t.autoCenter=l.center,t.polygonIndex=l.index,"[object Object]"===Object.prototype.toString.call(r)&&e(r).forEach(function(e){n(e,!0).forEach(function(o){t.data[o].center=r[e]})})})}),ymaps.modules.define("config",[],function(t){t({MIN_ZOOM:0,MAX_ZOOM:19,options:["labelHtml","labelText","labelForceVisibleZoom","labelTextClassName","labelTextSize","outlineColor","textColor","maxFitTextSize"],properties:["labelCenterCoords"]})}),ymaps.modules.define("createLabelLayout",["templateLayoutFactory"],function(t,e){t(e.createClass("<div {% style %}position: {{properties.position}}; top: {{properties.top}}px;left: {{properties.left}}px; {% endstyle %}>$[properties.html]</div>"))}),ymaps.modules.define("Label",["util.extend","stringReplacer"],function(t,e,o){function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}t(function(){function t(e,o,i,a){if(n(this,t),!e||!i||!a)throw new Error("wrong argument");this._geoObject=e,this._parentCollection=a,this._options=o,this._label=null,this._LayoutClass=i,this._initLabel()}return t.prototype.getPlacemark=function(){return this._label},t.prototype.culculateLabelSize=function(t){this.removeFromCollection();var o=t.height/2,n=t.width/2;this._label=this._createLabel({properties:e({},this._label.properties.getAll(),{top:-o,left:-n}),options:e({},this._label.options.getAll(),{iconShape:{type:"Rectangle",coordinates:[[-n,-o],[n,o]]}})}),this.addToCollection()},t.prototype.removeFromCollection=function(){if(!this._parentCollection)return!1;this._parentCollection.remove(this._label)},t.prototype.addToCollection=function(){if(!this._parentCollection)return!1;this._parentCollection.add(this._label)},t.prototype._initLabel=function(){var t=this._options.labelHtml,e=void 0;e=t||this._createLabelWithPresets(),this._label=this._createLabel({properties:{html:e},options:this._options})},t.prototype._createLabel=function(t){var o=t.properties,n=t.options;return o=e({},{top:0,left:0,position:"absolute"},o),n=e({},{iconLayout:this._LayoutClass},n),new ymaps.Placemark([0,0],o,n)},t.prototype._createLabelWithPresets=function(){var t=this._options,e=t.labelText,n=t.labelTextClassName,i=t.labelTextSize,a=t.outlineColor,r=t.textColor;return o('<div class="$1" style="font-size: $2; color: $3; text-shadow: $4">$5</div>',[n,i,r,"\n        1px 1px 0 "+a+",\n        -1px -1px 0 "+a+",\n        1px -1px 0 "+a+",\n        -1px 1px 0 "+a,e])},t.prototype._initEvents=function(){this._label.events.add("click",this._labelClick,this)},t.prototype._labelClick=function(){this._geoObject.events.fire("labelClick",{targetLabel:this})},t.prototype._removeClickEvent=function(){this._label.events.remove("click",this._labelClick,this)},t}())}),ymaps.modules.define("setPresets",["util.extend"],function(t,e){function o(t){var o=["Big","Small"],n=["BlackInWhiteOutline","WhiteInBlackOutline"];o.forEach(function(o){t.add(""+r+o,e({},a[o]))}),n.forEach(function(o){t.add(""+r+o,e({},a[o]))}),o.forEach(function(o){n.forEach(function(n){t.add(""+r+o+n,e({},a[o],a[n]))})})}function n(t){return{labelTextSize:t}}function i(t,e){return{textColor:t,outlineColor:e}}var a={Big:n("20px"),Small:n("12px"),BlackInWhiteOutline:i("black","white"),HhiteInBlackOutline:i("white","black")},r="polylabel#";t(function(t){var a=ymaps.option.presetStorage;t.options.set("preset","polylabel#default"),a.add("polylabel#default",e({},n("16px"),i("black"))),o(a)})}),ymaps.modules.define("util.polylabel",["Label","setCenter","createDefaultLabelData","setZoomVisibility","setPresets","config","createLabelLayout","GeoObjectCollection"],function(t,e,o,n,i,a,r,l,s){function c(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}t(function(){function t(e,o){c(this,t),this._map=e,this._collections=o,this._labelsCollections=new s,this._map.geoObjects.add(this._labelsCollections),this._labelLayout=l,this._initData()}return t.prototype.update=function(){this._culculateCollections(!0)},t.prototype.destroy=function(){this._labelsCollections.removeAll(),this._deleteListeners()},t.prototype._initData=function(){var t=this;a(this._collections),this._culculateCollections(!0).then(function(){t._initMapListeners(),t._initCollectionListeners()})},t.prototype._culculateCollections=function(t){var e=this;return new Promise(function(o){t&&e._clearLabelCollections(),e._collections.each(function(o){var n=void 0;t&&(n=new s,e._labelsCollections.add(n)),o.each(function(o){t?e._culculateGeoObject(o,n).then(function(){e._culculateLabelData(o)}):e._culculateLabelData(o)})}),o()})},t.prototype._culculateLabelData=function(t){var e=t.properties.get("labelData");if(e){var o=e.data,n=e.autoCenter,i=e.label;o=o[this._map.getZoom()],i=i.getPlacemark(),o.visibleForce||o.visible?(i.geometry.setCoordinates(o.center||n),i.options.set({pane:"places"})):i.options.set({pane:"phantom"})}},t.prototype._culculateGeoObject=function(t,a){var r=this,l=this._getOptions(t),s=this._getProperties(t),c=n();o(c,t,s);var u=new e(t,l,this._labelLayout,a);return u.addToCollection(),u.getPlacemark().getOverlay().then(function(t){return t.getLayout()}).then(function(e){var o=e.getElement().firstChild.getBoundingClientRect();u.culculateLabelSize(o),u._initEvents(),i(r._map,c,t,o,l.labelForceVisibleZoom),c.label=u,t.properties.set("labelData",c)})},t.prototype._getOptions=function(t){var e={};return r.options.forEach(function(o){e[o]=t.options.get(o,void 0)}),e},t.prototype._getProperties=function(t){var e={};return r.properties.forEach(function(o){e[o]=t.properties.get(o,void 0)}),e},t.prototype._clearLabelCollections=function(){this._labelsCollections.removeAll(),this._labelsCollections.options.set({pane:"phantom"})},t.prototype._initMapListeners=function(){this._map.events.add("boundschange",this._mapBoundsChange,this)},t.prototype._initCollectionListeners=function(){this._collections.events.add(["add","remove"],this._collectionEvents,this)},t.prototype._mapBoundsChange=function(t){t.get("newZoom")!==t.get("oldZoom")&&this._culculateCollections()},t.prototype._collectionEvents=function(t){switch(t.get("type")){case"add":case"remove":this._culculateCollections(!0)}},t.prototype._deleteListeners=function(){this._collections.events.remove(["add","remove"],this._collectionEvents,this),this._map.events.remove("boundschange",this._mapBoundsChange,this)},t}())}),ymaps.modules.define("calculateArea",[],function(t){function e(t){if("Feature"===t.type)return t.geometry;if(t.geometry&&t.geometry.getType)return"Circle"===t.geometry.getType()?{type:"Circle",coordinates:t.geometry.getCoordinates(),radius:t.geometry.getRadius()}:{type:t.geometry.getType(),coordinates:t.geometry.getCoordinates()};throw new Error("util.calculateArea: Unknown input object.")}function o(t){var e,o=0;switch(t.type){case"Polygon":return n(t.coordinates);case"MultiPolygon":for(e=0;e<t.coordinates.length;e++)o+=n(t.coordinates[e]);return o;case"Rectangle":return n([[t.coordinates[0],[t.coordinates[0][0],t.coordinates[1][1]],t.coordinates[1],[t.coordinates[1][0],t.coordinates[0][1]],t.coordinates[0]]]);case"Circle":return Math.PI*Math.pow(t.radius,2);case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}}function n(t){var e=0;if(t&&t.length>0){e+=Math.abs(i(t[0]));for(var o=1;o<t.length;o++)e-=Math.abs(i(t[o]))}return e}function i(t){var e,o,n,i,l,s,c=0,u=t.length,p="latlong"===ymaps.meta.coordinatesOrder?1:0,h="latlong"===ymaps.meta.coordinatesOrder?0:1;if(u>2){for(s=0;s<u;s++)s===u-2?(n=u-2,i=u-1,l=0):s===u-1?(n=u-1,i=0,l=1):(n=s,i=s+1,l=s+2),e=t[n],o=t[i],c+=(a(t[l][p])-a(e[p]))*Math.sin(a(o[h]));c=c*r*r/2}return c}function a(t){return t*Math.PI/180}t(function(t){return o(e(t))});var r=6378137}),ymaps.modules.define("checkPointPosition",[],function(t){function e(t,e,a){var r=o(a,e),l=o(t,e),s=r[0]*l[1]-l[0]*r[1];return s>0?"LEFT":s<0?"RIGHT":r[0]*l[0]<0||r[1]*l[1]<0?"BEHIND":n(r)<n(l)?"BEYOND":i(e,t)?"ORIGIN":i(a,t)?"DESTINATION":"BETWEEN"}function o(t,e){return[t[0]-e[0],t[1]-e[1]]}function n(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2))}function i(t,e){return t[0]===e[0]&&t[1]===e[1]}function a(t,o){var n=o[0],i=o[1];switch(e(t,n,i)){case"LEFT":return n[1]<t[1]&&t[1]<=i[1]?"CROSSING":"INESSENTIAL";case"RIGHT":return i[1]<t[1]&&t[1]<=n[1]?"CROSSING":"INESSENTIAL";case"BETWEEN":case"ORIGIN":case"DESTINATION":return"TOUCHING";default:return"INESSENTIAL"}}t(function(t,e){for(var o=0,n=0;n<e.length-1;n++)switch(a(t,[e[n],e[n+1]])){case"TOUCHING":return"BOUNDARY";case"CROSSING":o=1-o}return o?"INSIDE":"OUTSIDE"})}),ymaps.modules.define("createDefaultLabelData",["config"],function(t,e){var o=e.MIN_ZOOM,n=e.MAX_ZOOM;t(function(){for(var t=o,e={data:{},autoCenter:[0,0],polygonIndex:0};t<=n;)e.data[t]={visible:!1,visibleForce:!1,center:null,maxFitTextSize:null},t++;return e})}),ymaps.modules.define("getMaxFitTextSize",[],function(t){t(function(){})}),ymaps.modules.define("getPolesOfInaccessibility",["calculateArea"],function(t,e){function o(t,e){if(!(this instanceof o))return new o(t,e);if(this.data=t||[],this.length=this.data.length,this.compare=e||n,this.length>0)for(var i=this.length>>1;i>=0;i--)this._down(i)}function n(t,e){return t<e?-1:t>e?1:0}function i(t,e,o){e=e||1;for(var n,i,l,c,p=0;p<t[0].length;p++){var h=t[0][p];(!p||h[0]<n)&&(n=h[0]),(!p||h[1]<i)&&(i=h[1]),(!p||h[0]>l)&&(l=h[0]),(!p||h[1]>c)&&(c=h[1])}var f=l-n,d=c-i,m=Math.min(f,d),b=m/2,y=new u(null,a);if(0===m)return[n,i];for(var g=n;g<l;g+=m)for(var v=i;v<c;v+=m)y.push(new r(g+b,v+b,b,t));var _=s(t),C=new r(n+f/2,i+d/2,0,t);C.d>_.d&&(_=C);for(var x=y.length;y.length;){var O=y.pop();O.d>_.d&&(_=O,o&&console.error("found best %d after %d probes",Math.round(1e4*O.d)/1e4,x)),O.max-_.d<=e||(b=O.h/2,y.push(new r(O.x-b,O.y-b,b,t)),y.push(new r(O.x+b,O.y-b,b,t)),y.push(new r(O.x-b,O.y+b,b,t)),y.push(new r(O.x+b,O.y+b,b,t)),x+=4)}return o&&(console.error("num probes: "+x),console.error("best distance: "+_.d)),[_.x,_.y]}function a(t,e){return e.max-t.max}function r(t,e,o,n){this.x=t,this.y=e,this.h=o,this.d=l(t,e,n),this.max=this.d+this.h*Math.SQRT2}function l(t,e,o){for(var n=!1,i=1/0,a=0;a<o.length;a++)for(var r=o[a],l=0,s=r.length,u=s-1;l<s;u=l++){var p=r[l],h=r[u];p[1]>e!=h[1]>e&&t<(h[0]-p[0])*(e-p[1])/(h[1]-p[1])+p[0]&&(n=!n),i=Math.min(i,c(t,e,p,h))}return(n?1:-1)*Math.sqrt(i)}function s(t){for(var e=0,o=0,n=0,i=t[0],a=0,l=i.length,s=l-1;a<l;s=a++){var c=i[a],u=i[s],p=c[0]*u[1]-u[0]*c[1];o+=(c[0]+u[0])*p,n+=(c[1]+u[1])*p,e+=3*p}return 0===e?new r(i[0][0],i[0][1],0,t):new r(o/e,n/e,0,t)}function c(t,e,o,n){var i=o[0],a=o[1],r=n[0]-i,l=n[1]-a;if(0!==r||0!==l){var s=((t-i)*r+(e-a)*l)/(r*r+l*l);s>1?(i=n[0],a=n[1]):s>0&&(i+=r*s,a+=l*s)}return r=t-i,l=e-a,r*r+l*l}t(function(t,o,n){var a=Number.MIN_VALUE,r=0,l=void 0;if(t.length>1){for(var s=0;s<t.length;s++){var c=new ymaps.GeoObject({geometry:{type:"Polygon",coordinates:[t[s]]}}),u=Math.round(e(c));a<u&&(a=u,r=s)}l=[t[r]]}else l=t;return{center:i(l,o,n),index:r}}),o.prototype={push:function(t){this.data.push(t),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var t=this.data[0];return--this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),t}},peek:function(){return this.data[0]},_up:function(t){for(var e=this.data,o=this.compare,n=e[t];t>0;){var i=t-1>>1,a=e[i];if(o(n,a)>=0)break;e[t]=a,t=i}e[t]=n},_down:function(t){for(var e=this.data,o=this.compare,n=this.length>>1,i=e[t];t<n;){var a=1+(t<<1),r=a+1,l=e[a];if(r<this.length&&o(e[r],l)<0&&(a=r,l=e[r]),o(l,i)>=0)break;e[t]=l,t=a}e[t]=i}};var u=o}),ymaps.modules.define("stringReplacer",[],function(t){t(function(t,e){var o=t;return e.forEach(function(t,e){o=o.replace(new RegExp("\\$"+(e+1),"g"),t)}),o})}),ymaps.modules.define("parseZoomData",["util.array","config"],function(t,e,o){function n(t,e){t[e]=!0,r(e)}function i(t,e){e.forEach(function(e){"number"==typeof e?n(t,e):"string"==typeof e&&a(t,e)})}function a(t,e){if(!isNaN(Number(e)))return t[Number(e)]=!0,void r(Number(e));var o=e.split("_").map(Number);if(isNaN(o[0])||isNaN(o[1]))return"err";for(var n=o[0]<s?s:o[0],i=o[1]>c?c:o[1];n<=i;)t[n]=!0,r(n),n++}function r(t){u&&p.push(t)}function l(){for(var t=s,e={};t<=c;)e[t]=!1,t++;return e}var s=o.MIN_ZOOM,c=o.MAX_ZOOM;t(function(t,o){u=o,p=[];var r=l();if("number"==typeof t)n(r,t);else if(e.isArray(t))i(r,t);else if("string"==typeof t&&"err"===a(r,t))return r;return u?p:r});var u=!1,p=[]}),ymaps.modules.define("setZoomVisibility",["util.objectKeys","checkPointPosition","config","parseZoomData"],function(t,e,o,n,i){function a(t,e,o,i){for(var a=n.MIN_ZOOM,s=n.MAX_ZOOM,c=void 0;a<s;)l(t,o,r(t,e,c=Math.floor((a+s)/2),i),c)?s=c:a=c+1;return a}function r(t,e,o,n){var i=t.options.get("projection").toGlobalPixels(e,o),a=n.width,r=n.height,l=[];return l.push([i[0]-a/2,i[1]-r/2],[i[0]-a/2,i[1]+r/2],[i[0]+a/2,i[1]-r/2],[i[0]+a/2,i[1]+r/2]),l}function l(t,e,n,i){for(var a=0;a<n.length;a++){var r=t.options.get("projection").fromGlobalPixels(n[a],i);if("INSIDE"!==o(r,e))return!1}return!0}t(function(t,o,n,r,l){var s=i(l),c=n.geometry.getCoordinates()[o.polygonIndex],u=a(t,o.autoCenter,c,r);e(o.data).forEach(function(e){if(o.data[e].center){var n=a(t,o.data[e].center,c,r);o.data[e].visible=e>=n}else o.data[e].visible=e>=u;o.data[e].visibleForce=s[e]})})});