ymaps.modules.define("setCenter",["getPolesOfInaccessibility","parseZoomData"],function(t,e,n){t(function(t,o,r){var a=r.labelCenterCoords,i=e(o.geometry.getCoordinates(),1);if(t.autoCenter=i.center,t.polygonIndex=i.index,a){if("[object Object]"!==Object.prototype.toString.call(a))throw new Error("Center coords is not object");Object.keys(a).forEach(function(e){n(e,!0).forEach(function(n){t.data[n].center=a[e]})})}})}),ymaps.modules.define("config",[],function(t){t({MIN_ZOOM:0,MAX_ZOOM:19})}),ymaps.modules.define("createLabel",[],function(t){t(function(t){var e=t.labelHtml,n=t.labelText,o=t.labelTextClassName,r=void 0;if(e)r=e;else{var a=document.createElement("div");a.innerHTML=n,o&&(a.className=o),r=a}var i=ymaps.templateLayoutFactory.createClass('<div style="position: absolute; top: {{properties.top}}px; left: {{properties.left}}px">$[properties.html]</div>');return new ymaps.Placemark([0,0],{html:r.outerHTML,top:0,left:0},{iconLayout:i})})}),ymaps.modules.define("util.polylabel",["createLabel","setCenter","createDefaultLabelData","setZoomVisibility"],function(t,e,n,o,r){function a(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}t(function(){function t(e,n){a(this,t),this._map=e,this._collections=n,this._labelsCollection=new ymaps.GeoObjectCollection,this._initData()}return t.prototype._initData=function(){this._initMapListeners(),this._calculateCollections(!0)},t.prototype._calculateCollections=function(t){var e=this;t&&(this._labelsCollection.options.set({pane:"phantom"}),this._map.geoObjects.add(this._labelsCollection)),this._collections.each(function(n){n.each(function(n){t?e._calculateGeoObject(n).then(function(){e._analyseLabelData(n)}):e._analyseLabelData(n)})})},t.prototype._analyseLabelData=function(t){var e=t.properties.get("labelData"),n=e.data,o=e.autoCenter,r=e.label;(n=n[this._map.getZoom()]).visibleForce||n.visible?(r.geometry.setCoordinates(n.center||o),r.options.set({pane:"places"})):r.options.set({pane:"phantom"})},t.prototype._calculateGeoObject=function(t){var a=this;return new Promise(function(i){var s=a._getOptions(t),l=a._getProperties(t),c=o();n(c,t,l);var u=e(s);a._labelsCollection.add(u),u.getOverlay().then(function(e){e.getLayout().then(function(e){var n=e._element.firstChild.getBoundingClientRect();u.properties.set({top:-n.height/2,left:-n.width/2}),r(a._map,c,t,n,s.labelForceVisibleZoom),c.label=u,t.properties.set("labelData",c),i()})})})},t.prototype._getOptions=function(t){var e=["labelForceVisibleZoom","labelTextClassName","labelHtml","labelText"],n=t.options,o={};return e.forEach(function(t){o[t]=n.get(t,null)}),o},t.prototype._getProperties=function(t){var e=["labelCenterCoords"],n=t.properties,o={};return e.forEach(function(t){o[t]=n.get(t,null)}),o},t.prototype._initMapListeners=function(){var t=this;this._map.events.add("boundschange",function(e){e.get("newZoom")!==e.get("oldZoom")&&t._calculateCollections()})},t}())}),ymaps.modules.define("calculateArea",[],function(t){function e(t){if("Feature"===t.type)return t.geometry;if(t.geometry&&t.geometry.getType)return"Circle"===t.geometry.getType()?{type:"Circle",coordinates:t.geometry.getCoordinates(),radius:t.geometry.getRadius()}:{type:t.geometry.getType(),coordinates:t.geometry.getCoordinates()};throw new Error("util.calculateArea: Unknown input object.")}function n(t){var e,n=0;switch(t.type){case"Polygon":return o(t.coordinates);case"MultiPolygon":for(e=0;e<t.coordinates.length;e++)n+=o(t.coordinates[e]);return n;case"Rectangle":return o([[t.coordinates[0],[t.coordinates[0][0],t.coordinates[1][1]],t.coordinates[1],[t.coordinates[1][0],t.coordinates[0][1]],t.coordinates[0]]]);case"Circle":return Math.PI*Math.pow(t.radius,2);case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}}function o(t){var e=0;if(t&&t.length>0){e+=Math.abs(r(t[0]));for(var n=1;n<t.length;n++)e-=Math.abs(r(t[n]))}return e}function r(t){var e,n,o,r,s,l,c=0,u=t.length,f="latlong"===ymaps.meta.coordinatesOrder?1:0,h="latlong"===ymaps.meta.coordinatesOrder?0:1;if(u>2){for(l=0;l<u;l++)l===u-2?(o=u-2,r=u-1,s=0):l===u-1?(o=u-1,r=0,s=1):(o=l,r=l+1,s=l+2),e=t[o],n=t[r],c+=(a(t[s][f])-a(e[f]))*Math.sin(a(n[h]));c=c*i*i/2}return c}function a(t){return t*Math.PI/180}t(function(t){return n(e(t))});var i=6378137}),ymaps.modules.define("checkPointPosition",[],function(t){function e(t,e,a){var i=n(a,e),s=n(t,e),l=i[0]*s[1]-s[0]*i[1];return l>0?"LEFT":l<0?"RIGHT":i[0]*s[0]<0||i[1]*s[1]<0?"BEHIND":o(i)<o(s)?"BEYOND":r(e,t)?"ORIGIN":r(a,t)?"DESTINATION":"BETWEEN"}function n(t,e){return[t[0]-e[0],t[1]-e[1]]}function o(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2))}function r(t,e){return t[0]===e[0]&&t[1]===e[1]}function a(t,n){var o=n[0],r=n[1];switch(e(t,o,r)){case"LEFT":return o[1]<t[1]&&t[1]<=r[1]?"CROSSING":"INESSENTIAL";case"RIGHT":return r[1]<t[1]&&t[1]<=o[1]?"CROSSING":"INESSENTIAL";case"BETWEEN":case"ORIGIN":case"DESTINATION":return"TOUCHING";default:return"INESSENTIAL"}}t(function(t,e){for(var n=0,o=0;o<e.length-1;o++)switch(a(t,[e[o],e[o+1]])){case"TOUCHING":return"BOUNDARY";case"CROSSING":n=1-n}return n?"INSIDE":"OUTSIDE"})}),ymaps.modules.define("createDefaultLabelData",["config"],function(t,e){var n=e.MIN_ZOOM,o=e.MAX_ZOOM;t(function(){for(var t=n,e={data:{},autoCenter:[0,0],polygonIndex:0};t<=o;)e.data[t]={visible:!1,visibleForce:!1,center:null},t++;return e})}),ymaps.modules.define("getPolesOfInaccessibility",["calculateArea"],function(t,e){function n(t,e){if(!(this instanceof n))return new n(t,e);if(this.data=t||[],this.length=this.data.length,this.compare=e||o,this.length>0)for(var r=this.length>>1;r>=0;r--)this._down(r)}function o(t,e){return t<e?-1:t>e?1:0}function r(t,e,n){e=e||1;for(var o,r,s,c,f=0;f<t[0].length;f++){var h=t[0][f];(!f||h[0]<o)&&(o=h[0]),(!f||h[1]<r)&&(r=h[1]),(!f||h[0]>s)&&(s=h[0]),(!f||h[1]>c)&&(c=h[1])}var p=s-o,d=c-r,m=Math.min(p,d),g=m/2,y=new u(null,a);if(0===m)return[o,r];for(var v=o;v<s;v+=m)for(var b=r;b<c;b+=m)y.push(new i(v+g,b+g,g,t));var N=l(t),O=new i(o+p/2,r+d/2,0,t);O.d>N.d&&(N=O);for(var _=y.length;y.length;){var M=y.pop();M.d>N.d&&(N=M,n&&console.error("found best %d after %d probes",Math.round(1e4*M.d)/1e4,_)),M.max-N.d<=e||(g=M.h/2,y.push(new i(M.x-g,M.y-g,g,t)),y.push(new i(M.x+g,M.y-g,g,t)),y.push(new i(M.x-g,M.y+g,g,t)),y.push(new i(M.x+g,M.y+g,g,t)),_+=4)}return n&&(console.error("num probes: "+_),console.error("best distance: "+N.d)),[N.x,N.y]}function a(t,e){return e.max-t.max}function i(t,e,n,o){this.x=t,this.y=e,this.h=n,this.d=s(t,e,o),this.max=this.d+this.h*Math.SQRT2}function s(t,e,n){for(var o=!1,r=1/0,a=0;a<n.length;a++)for(var i=n[a],s=0,l=i.length,u=l-1;s<l;u=s++){var f=i[s],h=i[u];f[1]>e!=h[1]>e&&t<(h[0]-f[0])*(e-f[1])/(h[1]-f[1])+f[0]&&(o=!o),r=Math.min(r,c(t,e,f,h))}return(o?1:-1)*Math.sqrt(r)}function l(t){for(var e=0,n=0,o=0,r=t[0],a=0,s=r.length,l=s-1;a<s;l=a++){var c=r[a],u=r[l],f=c[0]*u[1]-u[0]*c[1];n+=(c[0]+u[0])*f,o+=(c[1]+u[1])*f,e+=3*f}return 0===e?new i(r[0][0],r[0][1],0,t):new i(n/e,o/e,0,t)}function c(t,e,n,o){var r=n[0],a=n[1],i=o[0]-r,s=o[1]-a;if(0!==i||0!==s){var l=((t-r)*i+(e-a)*s)/(i*i+s*s);l>1?(r=o[0],a=o[1]):l>0&&(r+=i*l,a+=s*l)}return i=t-r,s=e-a,i*i+s*s}t(function(t,n,o){var a=Number.MIN_VALUE,i=0,s=void 0;if(t.length>1){for(var l=0;l<t.length;l++){var c=new ymaps.GeoObject({geometry:{type:"Polygon",coordinates:[t[l]]}}),u=Math.round(e(c));a<u&&(a=u,i=l)}s=[t[i]]}else s=t;return{center:r(s,n,o),index:i}}),n.prototype={push:function(t){this.data.push(t),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var t=this.data[0];return--this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),t}},peek:function(){return this.data[0]},_up:function(t){for(var e=this.data,n=this.compare,o=e[t];t>0;){var r=t-1>>1,a=e[r];if(n(o,a)>=0)break;e[t]=a,t=r}e[t]=o},_down:function(t){for(var e=this.data,n=this.compare,o=this.length>>1,r=e[t];t<o;){var a=1+(t<<1),i=a+1,s=e[a];if(i<this.length&&n(e[i],s)<0&&(a=i,s=e[i]),n(s,r)>=0)break;e[t]=s,t=a}e[t]=r}};var u=n}),ymaps.modules.define("parseZoomData",["util.array","config"],function(t,e,n){function o(t,e){t[e]=!0}function r(t,e){e.forEach(function(e){"number"==typeof e||!isNaN(Number(e))&&null!==e?(o(t,Number(e)),i(Number(e))):"string"==typeof e&&a(t,e)})}function a(t,e){var n=e.split("_").map(Number);if(isNaN(n[0])||isNaN(n[1]))return"err";for(var o=n[0]<l?l:n[0],r=n[1]>c?c:n[1];o<=r;)t[o]=!0,i(o),o++}function i(t){u&&f.push(t)}function s(){for(var t=l,e={};t<=c;)e[t]=!1,t++;return e}var l=n.MIN_ZOOM,c=n.MAX_ZOOM;t(function(t,n){u=n,f=[];var l=s();if("number"==typeof t||!isNaN(Number(t))&&null!==t)o(l,Number(t)),i(Number(t));else if(e.isArray(t))r(l,t);else if("string"==typeof t&&"err"===a(l,t))return l;return u?f:l});var u=!1,f=[]}),ymaps.modules.define("setZoomVisibility",["checkPointPosition","config","parseZoomData"],function(t,e,n,o){function r(t,e,n,o){for(var r=s,c=l,u=void 0;r<c;)i(t,n,a(t,e,u=Math.floor((r+c)/2),o),u)?c=u:r=u+1;return r}function a(t,e,n,o){var r=t.options.get("projection").toGlobalPixels(e,n),a=o.width,i=o.height,s=[];return s.push([r[0]-a/2,r[1]-i/2],[r[0]-a/2,r[1]+i/2],[r[0]+a/2,r[1]-i/2],[r[0]+a/2,r[1]+i/2]),s}function i(t,n,o,r){for(var a=0;a<o.length;a++){var i=t.options.get("projection").fromGlobalPixels(o[a],r);if("INSIDE"!==e(i,n))return!1}return!0}var s=n.MIN_ZOOM,l=n.MAX_ZOOM;t(function(t,e,n,a,i){var s=o(i),l=n.geometry.getCoordinates()[e.polygonIndex],c=r(t,e.autoCenter,l,a);Object.keys(e.data).forEach(function(n){if(e.data[n].center){var o=r(t,e.data[n].center,l,a);e.data[n].visible=n>=o}else e.data[n].visible=n>=c;e.data[n].visibleForce=s[n]})})});