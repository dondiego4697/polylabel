ymaps.modules.define("util.calculateArea",[],function(t){function e(t){if("Feature"==t.type)return t.geometry;if(t.geometry&&t.geometry.getType)return"Circle"==t.geometry.getType()?{type:"Circle",coordinates:t.geometry.getCoordinates(),radius:t.geometry.getRadius()}:{type:t.geometry.getType(),coordinates:t.geometry.getCoordinates()};throw new Error("util.calculateArea: Unknown input object.")}function n(t){var e,n=0;switch(t.type){case"Polygon":return r(t.coordinates);case"MultiPolygon":for(e=0;e<t.coordinates.length;e++)n+=r(t.coordinates[e]);return n;case"Rectangle":return r([[t.coordinates[0],[t.coordinates[0][0],t.coordinates[1][1]],t.coordinates[1],[t.coordinates[1][0],t.coordinates[0][1]],t.coordinates[0]]]);case"Circle":return Math.PI*Math.pow(t.radius,2);case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}}function r(t){var e=0;if(t&&t.length>0){e+=Math.abs(o(t[0]));for(var n=1;n<t.length;n++)e-=Math.abs(o(t[n]))}return e}function o(t){var e,n,r,o,s,c,u=0,h=t.length,l="latlong"==ymaps.meta.coordinatesOrder?1:0,d="latlong"==ymaps.meta.coordinatesOrder?0:1;if(h>2){for(c=0;c<h;c++)c===h-2?(r=h-2,o=h-1,s=0):c===h-1?(r=h-1,o=0,s=1):(r=c,o=c+1,s=c+2),e=t[r],n=t[o],u+=(a(t[s][l])-a(e[l]))*Math.sin(a(n[d]));u=u*i*i/2}return u}function a(t){return t*Math.PI/180}var i=6378137;t(function(t){return n(e(t))})}),ymaps.modules.define("checkPointPosition",[],function(t){function e(t,e,a){var i=n(a,e),s=n(t,e),c=i[0]*s[1]-s[0]*i[1];return c>0?"LEFT":c<0?"RIGHT":i[0]*s[0]<0||i[1]*s[1]<0?"BEHIND":r(i)<r(s)?"BEYOND":o(e,t)?"ORIGIN":o(a,t)?"DESTINATION":"BETWEEN"}function n(t,e){return[t[0]-e[0],t[1]-e[1]]}function r(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2))}function o(t,e){return t[0]===e[0]&&t[1]===e[1]}function a(t,n){var r=n[0],o=n[1];switch(e(t,r,o)){case"LEFT":return r[1]<t[1]&&t[1]<=o[1]?"CROSSING":"INESSENTIAL";case"RIGHT":return o[1]<t[1]&&t[1]<=r[1]?"CROSSING":"INESSENTIAL";case"BETWEEN":case"ORIGIN":case"DESTINATION":return"TOUCHING";default:return"INESSENTIAL"}}t(function(t,e){for(var n=0,r=0;r<e.length-1;r++)switch(a(t,[e[r],e[r+1]])){case"TOUCHING":return"BOUNDARY";case"CROSSING":n=1-n}return n?"INSIDE":"OUTSIDE"})}),ymaps.modules.define("getPolesOfInaccessibility",["util.calculateArea"],function(t,e){function n(t,e){if(!(this instanceof n))return new n(t,e);if(this.data=t||[],this.length=this.data.length,this.compare=e||r,this.length>0)for(var o=this.length>>1;o>=0;o--)this._down(o)}function r(t,e){return t<e?-1:t>e?1:0}function o(t,e,n){e=e||1;for(var r,o,s,u,l=0;l<t[0].length;l++){var d=t[0][l];(!l||d[0]<r)&&(r=d[0]),(!l||d[1]<o)&&(o=d[1]),(!l||d[0]>s)&&(s=d[0]),(!l||d[1]>u)&&(u=d[1])}var f=s-r,p=u-o,g=Math.min(f,p),y=g/2,m=new h(null,a);if(0===g)return[r,o];for(var v=r;v<s;v+=g)for(var I=o;I<u;I+=g)m.push(new i(v+y,I+y,y,t));var w=c(t),N=new i(r+f/2,o+p/2,0,t);N.d>w.d&&(w=N);for(var E=m.length;m.length;){var M=m.pop();M.d>w.d&&(w=M,n&&console.log("found best %d after %d probes",Math.round(1e4*M.d)/1e4,E)),M.max-w.d<=e||(y=M.h/2,m.push(new i(M.x-y,M.y-y,y,t)),m.push(new i(M.x+y,M.y-y,y,t)),m.push(new i(M.x-y,M.y+y,y,t)),m.push(new i(M.x+y,M.y+y,y,t)),E+=4)}return n&&(console.log("num probes: "+E),console.log("best distance: "+w.d)),[w.x,w.y]}function a(t,e){return e.max-t.max}function i(t,e,n,r){this.x=t,this.y=e,this.h=n,this.d=s(t,e,r),this.max=this.d+this.h*Math.SQRT2}function s(t,e,n){for(var r=!1,o=1/0,a=0;a<n.length;a++)for(var i=n[a],s=0,c=i.length,h=c-1;s<c;h=s++){var l=i[s],d=i[h];l[1]>e!=d[1]>e&&t<(d[0]-l[0])*(e-l[1])/(d[1]-l[1])+l[0]&&(r=!r),o=Math.min(o,u(t,e,l,d))}return(r?1:-1)*Math.sqrt(o)}function c(t){for(var e=0,n=0,r=0,o=t[0],a=0,s=o.length,c=s-1;a<s;c=a++){var u=o[a],h=o[c],l=u[0]*h[1]-h[0]*u[1];n+=(u[0]+h[0])*l,r+=(u[1]+h[1])*l,e+=3*l}return 0===e?new i(o[0][0],o[0][1],0,t):new i(n/e,r/e,0,t)}function u(t,e,n,r){var o=n[0],a=n[1],i=r[0]-o,s=r[1]-a;if(0!==i||0!==s){var c=((t-o)*i+(e-a)*s)/(i*i+s*s);c>1?(o=r[0],a=r[1]):c>0&&(o+=i*c,a+=s*c)}return i=t-o,s=e-a,i*i+s*s}n.prototype={push:function(t){this.data.push(t),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var t=this.data[0];return--this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),t}},peek:function(){return this.data[0]},_up:function(t){for(var e=this.data,n=this.compare,r=e[t];t>0;){var o=t-1>>1,a=e[o];if(n(r,a)>=0)break;e[t]=a,t=o}e[t]=r},_down:function(t){for(var e=this.data,n=this.compare,r=this.length>>1,o=e[t];t<r;){var a=1+(t<<1),i=a+1,s=e[a];if(i<this.length&&n(e[i],s)<0&&(a=i,s=e[i]),n(s,o)>=0)break;e[t]=s,t=a}e[t]=o}};var h=n;t(function(t,n,r){var a,i=Number.MIN_VALUE,s=0;if(t.length>1){for(var c=0;c<t.length;c++){var u=new ymaps.GeoObject({geometry:{type:"Polygon",coordinates:[t[c]]}}),h=Math.round(e(u));i<h&&(i=h,s=c)}a=[t[s]]}else a=t;return{center:o(a,n,r),index:s}})}),ymaps.modules.define("util.polylabel",["getPolesOfInaccessibility","checkPointPosition"],function(t,e,n){function r(t){var e=document.createElement("div");e.style.display="inline-block",e.appendChild(t),document.body.appendChild(e);var n=t.clientWidth,r=t.clientHeight;return document.body.removeChild(e),{w:n,h:r}}function o(t,e,r,o){var a=ymaps.projection.sphericalMercator.toGlobalPixels(t,r),i=o.w,s=o.h,c=[];c.push([a[0]-i/2,a[1]-s/2]),c.push([a[0]-i/2,a[1]+s/2]),c.push([a[0]+i/2,a[1]-s/2]),c.push([a[0]+i/2,a[1]+s/2]);for(var u=0;u<c.length;u++){var h=ymaps.projection.sphericalMercator.fromGlobalPixels(c[u],r);if("INSIDE"!==n(h,e))return!1}return!0}t(function(t,n,a){if(!t instanceof Array)throw new Error("Wrong params");var i=e(t,1);return{center:i.center,isInside:o(i.center,t[i.index],a,r(n))}})});